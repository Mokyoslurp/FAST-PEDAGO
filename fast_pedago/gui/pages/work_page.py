# This file is part of FAST-OAD_CS23-HE : A framework for rapid Overall Aircraft Design of Hybrid
# Electric Aircraft.
# Copyright (C) 2022 ISAE-SUPAERO

import os
import os.path as pth

import ipywidgets as widgets

from typing import List

import fastoad.api as oad

from fast_pedago import source_data_files
from fast_pedago import gui

from fast_pedago.gui.buttons import (
    BackHomeButton,
    ClearAllButton,
    SensitivityAnalysisInfoButton,
)

from fast_pedago.gui.tabs import ParentTab
from fast_pedago.utils.functions import _image_from_path  # noqa

from fast_pedago.gui.pages.base_page import BasePage

BOTTOM_BOX_LAYOUT = widgets.Layout(
    border="0px solid black",
    margin="0 0 0 0px",
    padding="0px",
    align_items="center",
    width="100%",
    height="10%",
)

class WorkPage(BasePage):
    def __init__(self, *args, **kwargs):

        super().__init__(*args, **kwargs)

        # Create a button to go back home
        self.analysis_back_home_button = BackHomeButton(self.pages["home"])

        # A small info button
        self.analysis_info_button = SensitivityAnalysisInfoButton()

        # A button to clear all files generated by user when running this app, this will not
        # clear the reference results
        self.clear_all_button = ClearAllButton(self.pages["analysis"])

        fast_oad_logo_top_layer_file_path = pth.join(
            pth.dirname(gui.__file__), "resources", "logo_fast_oad_top_layer.jpg"
        )
        self.fast_oad_top_layer_logo_widget = _image_from_path(
            file_path=fast_oad_logo_top_layer_file_path,
            height="12%",
            width="100",
        )

        self.sensitivity_analysis_tab = ParentTab()
        self.sensitivity_analysis_tab.layout = widgets.Layout(
            border="0px solid black",
            margin="0 0 0 0px",
            padding="0px",
            align_items="flex-start",
            width="98%",
            height="78%",
        )

        self.bottom_layer_filler_box = widgets.Box(
            layout=widgets.Layout(
                border="0px solid black",
                margin="0 0 0 0px",
                padding="0px",
                justify_content="flex-start",
                width="40%",
                height="100%",
            ),
        )

        # Create a header with an info button and a button to go back home. Put it at the bottom
        # to match what is done on the main menu
        self.sensitivity_bottom_layer_button_box = widgets.Box(
            children=[
                self.analysis_back_home_button,
                self.analysis_info_button,
                self.clear_all_button,
            ],
            layout=widgets.Layout(
                border="0px solid black",
                margin="0 0 0 0px",
                padding="0px",
                justify_content="center",
                align_items="center",
                width="20%",
                height="100%",
            ),
        )


        isae_logo_file_path = pth.join(
            pth.dirname(gui.__file__), "resources", "logo_supaero.png"
        )
        self.isae_logo_widget = _image_from_path(
            isae_logo_file_path, height="100%", width="100"
        )

        self.bottom_layer_logo_filler_box = widgets.Box(
            layout=widgets.Layout(
                border="0px solid black",
                margin="0 0 0 0px",
                padding="0px",
                justify_content="flex-start",
                width="5%",
                height="100%",
            ),
        )

        airbus_logo_file_path = pth.join(
            pth.dirname(gui.__file__), "resources", "logo_airbus.png"
        )
        self.airbus_logo_widget = _image_from_path(
            airbus_logo_file_path, height="50%", width="100"
        )
        
        self.logo_box = widgets.HBox(
            children=[
                self.isae_logo_widget,
                self.bottom_layer_logo_filler_box,
                self.airbus_logo_widget,
            ],
            layout=widgets.Layout(
                border="0px solid black",
                margin="0 0 0 0px",
                padding="0px",
                justify_content="flex-end",
                align_items="center",
                width="40%",
                height="100%",
            ),
        )

        self.sensitivity_bottom_layer_box = widgets.Box(
            children=[
                self.bottom_layer_filler_box,
                self.sensitivity_bottom_layer_button_box,
                self.logo_box,
            ],
            layout=BOTTOM_BOX_LAYOUT,
        )

        self.sensitivity_analysis_tab.selected_index = 0

        self.children = [
            self.fast_oad_top_layer_logo_widget,
            self.sensitivity_analysis_tab,
            self.sensitivity_bottom_layer_box,
        ]



def list_available_reference_file(path_to_scan: str) -> List[str]:
    """
    Parses the name of all the file in the provided path and scan for reference file that can be
    selected for the rest of the analysis

    :param path_to_scan: path to look for reference file in
    :return: a list of available reference files
    """

    list_files = os.listdir(path_to_scan)
    available_reference_files = []

    for file in list_files:

        if file.endswith(".xml"):

            associated_sizing_process_name = file.replace(".xml", "")
            available_reference_files.append(associated_sizing_process_name)

    return available_reference_files
